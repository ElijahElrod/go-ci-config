name: "Checks"
permissions:
  contents: read
  pull-requests: read

on: [pull_request]


concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id}}
  cancel-in-progress: true

jobs:
  fmt:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ "1.21.3" ]
    name: fmt
    steps:
      - name: Checkout 
        uses: actions/checkout@v4
      - name: Setup Go ${{matrix.go-version}}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Format
        run: gofmt -l .
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ "1.21.3" ]
    name: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go ${{matrix.go-version}}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: v1.54
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.21.3"]
    name: tests
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Go ${{matrix.go-version}}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    - name: Build
      run: go build -v ./...
    - name: Test
      run: go test -race ./...
      

